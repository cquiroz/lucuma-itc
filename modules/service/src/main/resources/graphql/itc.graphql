##############
# From common schema
##############

# Instrument
enum InstrumentType {
  # InstrumentType AcqCam
  ACQ_CAM

  # InstrumentType Bhros
  BHROS

  # InstrumentType Flamingos2
  FLAMINGOS2

  # InstrumentType Ghost
  GHOST

  # InstrumentType GmosNorth
  GMOS_NORTH

  # InstrumentType GmosSouth
  GMOS_SOUTH

  # InstrumentType Gnirs
  GNIRS

  # InstrumentType Gpi
  GPI

  # InstrumentType Gsaoi
  GSAOI

  # InstrumentType Michelle
  MICHELLE

  # InstrumentType Nici
  NICI

  # InstrumentType Nifs
  NIFS

  # InstrumentType Niri
  NIRI

  # InstrumentType Phoenix
  PHOENIX

  # InstrumentType Trecs
  TRECS

  # InstrumentType Visitor
  VISITOR

  # InstrumentType Scorpio
  SCORPIO

  # InstrumentType Alopeke
  ALOPEKE

  # InstrumentType Zorro
  ZORRO
}

# Equivalent time amount in several unit options (e.g., 120 seconds or 2 minutes)
type Duration {
  # Duration in µs
  microseconds: Long!

  # Duration in ms
  milliseconds: BigDecimal!

  # Duration in seconds
  seconds: BigDecimal!

  # Duration in minutes
  minutes: BigDecimal!

  # Duration in hours
  hours: BigDecimal!
}

# Magnitude bands
enum Band {
  # Band SloanU
  SLOAN_U

  # Band SloanG
  SLOAN_G

  # Band SloanR
  SLOAN_R

  # Band SloanI
  SLOAN_I

  # Band SloanZ
  SLOAN_Z

  # Band U
  U

  # Band B
  B

  # Band V
  V

  # Band Uc
  UC

  # Band R
  R

  # Band I
  I

  # Band Y
  Y

  # Band J
  J

  # Band H
  H

  # Band K
  K

  # Band L
  L

  # Band M
  M

  # Band N
  N

  # Band Q
  Q

  # Band Ap
  AP
}

type BandBrightnessIntegrated {
  magnitude: BrightnessIntegrated!

  # Magnitude band
  band: Band!

  # Error, if any
  error: BigDecimal
}

type BandBrightnessSurface {
  magnitude: BrightnessSurface!

  # Magnitude band
  band: Band!

  # Error, if any
  error: BigDecimal
}

# Band normalized common interface
interface BandNormalized {
  # Un-normalized spectral energy distribution
  sed: UnnormalizedSed!
}

type BandNormalizedIntegrated implements BandNormalized {
  brightnesses: [BandBrightnessIntegrated!]!

  # Un-normalized spectral energy distribution
  sed: UnnormalizedSed!
}

type BandNormalizedSurface implements BandNormalized {
  brightnesses: [BandBrightnessSurface!]!

  # Un-normalized spectral energy distribution
  sed: UnnormalizedSed!
}
# Black body SED
type BlackBody {
  # Kelvin
  temperature: BigDecimal!
}

type BrightnessIntegrated {
  value: BigDecimal!
  units: BrightnessIntegratedUnits!
}

# Brightness integrated units
enum BrightnessIntegratedUnits {
  # Vega mag
  VEGA_MAGNITUDE

  # AB mag
  AB_MAGNITUDE

  # Jy
  JANSKY

  # W/m²/µm
  W_PER_M_SQUARED_PER_UM

  # erg/s/cm²/Å
  ERG_PER_S_PER_CM_SQUARED_PER_A

  # erg/s/cm²/Hz
  ERG_PER_S_PER_CM_SQUARED_PER_HZ
}

type BrightnessSurface {
  value: BigDecimal!
  units: BrightnessSurfaceUnits!
}

# Brightness surface units
enum BrightnessSurfaceUnits {
  # Vega mag/arcsec²
  VEGA_MAG_PER_ARCSEC_SQUARED

  # AB mag/arcsec²
  AB_MAG_PER_ARCSEC_SQUARED

  # Jy/arcsec²
  JY_PER_ARCSEC_SQUARED

  # W/m²/µm/arcsec²
  W_PER_M_SQUARED_PER_UM_PER_ARCSEC_SQUARED

  # erg/s/cm²/Å/arcsec²
  ERG_PER_S_PER_CM_SQUARED_PER_A_PER_ARCSEC_SQUARED

  # erg/s/cm²/Hz/arcsec²
  ERG_PER_S_PER_CM_SQUARED_PER_HZ_PER_ARCSEC_SQUARED
}

# Cool star model SED
type CoolStarModel {
  # Kelvin
  temperature: BigDecimal!
}

type EmissionLineIntegrated {
  wavelength: Wavelength!

  # km/s
  lineWidth: BigDecimal!
  lineFlux: LineFluxIntegrated!
}

type EmissionLinesIntegrated {
  lines: [EmissionLineIntegrated!]!
  fluxDensityContinuum: FluxDensityContinuumIntegrated!
}

type EmissionLinesSurface {
  lines: [EmissionLineSurface!]!
  fluxDensityContinuum: FluxDensityContinuumSurface!
}

type EmissionLineSurface {
  wavelength: Wavelength!

  # km/s
  lineWidth: BigDecimal!
  lineFlux: LineFluxSurface!
}

type FluxDensityContinuumIntegrated {
  value: BigDecimal!
  units: FluxDensityContinuumIntegratedUnits!
}

# Flux density continuum integrated units
enum FluxDensityContinuumIntegratedUnits {
  # W/m²/µm
  W_PER_M_SQUARED_PER_UM

  # erg/s/cm²/Å
  ERG_PER_S_PER_CM_SQUARED_PER_A
}

type FluxDensityContinuumSurface {
  value: BigDecimal!
  units: FluxDensityContinuumSurfaceUnits!
}

# Flux density continuum surface units
enum FluxDensityContinuumSurfaceUnits {
  # W/m²/µm/arcsec²
  W_PER_M_SQUARED_PER_UM_PER_ARCSEC_SQUARED

  # erg/s/cm²/Å/arcsec²
  ERG_PER_S_PER_CM_SQUARED_PER_A_PER_ARCSEC_SQUARED
}

type FluxDensityEntry {
  wavelength: Wavelength!
  value: BigDecimal!
}

type Galaxy {
  spectrum: GalaxySpectrum!
}

# Galaxy spectrum
enum GalaxySpectrum {
  # GalaxySpectrum Elliptical
  ELLIPTICAL

  # GalaxySpectrum Spiral
  SPIRAL
}

type GaussianSource {
  # full width at half maximum
  fwhm: Angle!

  # Gaussian source
  spectralDefinition: SpectralDefinitionIntegrated!
}

type HiiRegion {
  spectrum: HiiRegionSpectrum!
}

# HII Region spectrum
enum HiiRegionSpectrum {
  # HiiRegionSpectrum OrionNebula
  ORION_NEBULA
}

type LineFluxIntegrated {
  value: BigDecimal!
  units: LineFluxIntegratedUnits!
}

# Line flux integrated units
enum LineFluxIntegratedUnits {
  # W/m²
  W_PER_M_SQUARED

  # erg/s/cm²
  ERG_PER_S_PER_CM_SQUARED
}

type LineFluxSurface {
  value: BigDecimal!
  units: LineFluxSurfaceUnits!
}

# Line flux surface units
enum LineFluxSurfaceUnits {
  # W/m²/arcsec²
  W_PER_M_SQUARED_PER_ARCSEC_SQUARED

  # erg/s/cm²/arcsec²
  ERG_PER_S_PER_CM_SQUARED_PER_ARCSEC_SQUARED
}

type Planet {
  spectrum: PlanetSpectrum!
}

type PlanetaryNebula {
  spectrum: PlanetaryNebulaSpectrum!
}

# Planetary nebula spectrum
enum PlanetaryNebulaSpectrum {
  # PlanetaryNebulaSpectrum NGC7009
  NGC7009

  # PlanetaryNebulaSpectrum IC5117
  IC5117
}

# Planet spectrum
enum PlanetSpectrum {
  # PlanetSpectrum Mars
  MARS

  # PlanetSpectrum Jupiter
  JUPITER

  # PlanetSpectrum Saturn
  SATURN

  # PlanetSpectrum Uranus
  URANUS

  # PlanetSpectrum Neptune
  NEPTUNE
}

type Quasar {
  spectrum: QuasarSpectrum!
}

# Quasar spectrum
enum QuasarSpectrum {
  # QuasarSpectrum QS0
  QS0

  # QuasarSpectrum QS02
  QS02
}

# source profile
union SourceProfile = PointSource | UniformSource | GaussianSource

# Spectral definition integrated
union SpectralDefinitionIntegrated = BandNormalizedIntegrated | EmissionLinesIntegrated

# Spectral definition surface
union SpectralDefinitionSurface = BandNormalizedSurface | EmissionLinesSurface

type StellarLibrary {
  spectrum: StellarLibrarySpectrum!
}

# Stellar library spectrum
enum StellarLibrarySpectrum {
  # StellarLibrarySpectrum O5V
  O5_V

  # StellarLibrarySpectrum O8III
  O8_III

  # StellarLibrarySpectrum B0V
  B0_V

  # StellarLibrarySpectrum B5_7V
  B5_7_V

  # StellarLibrarySpectrum B5III
  B5_III

  # StellarLibrarySpectrum B5I
  B5_I

  # StellarLibrarySpectrum A0V
  A0_V

  # StellarLibrarySpectrum A0III
  A0_III

  # StellarLibrarySpectrum A0I
  A0_I

  # StellarLibrarySpectrum A5V
  A5_V

  # StellarLibrarySpectrum A5III
  A5_III

  # StellarLibrarySpectrum F0V
  F0_V

  # StellarLibrarySpectrum F0III
  F0_III

  # StellarLibrarySpectrum F0I
  F0_I

  # StellarLibrarySpectrum F5V
  F5_V

  # StellarLibrarySpectrum F5V_w
  F5_V_W

  # StellarLibrarySpectrum F6V_r
  F6_V_R

  # StellarLibrarySpectrum F5III
  F5_III

  # StellarLibrarySpectrum F5I
  F5_I

  # StellarLibrarySpectrum G0V
  G0_V

  # StellarLibrarySpectrum G0V_w
  G0_V_W

  # StellarLibrarySpectrum G0V_r
  G0_V_R

  # StellarLibrarySpectrum G0III
  G0_III

  # StellarLibrarySpectrum G0I
  G0_I

  # StellarLibrarySpectrum G2V
  G2_V

  # StellarLibrarySpectrum G5V
  G5_V

  # StellarLibrarySpectrum G5V_w
  G5_V_W

  # StellarLibrarySpectrum G5V_r
  G5_V_R

  # StellarLibrarySpectrum G5III
  G5_III

  # StellarLibrarySpectrum G5III_w
  G5_III_W

  # StellarLibrarySpectrum G5III_r
  G5_III_R

  # StellarLibrarySpectrum G5I
  G5_I

  # StellarLibrarySpectrum K0V
  K0_V

  # StellarLibrarySpectrum K0V_r
  K0_V_R

  # StellarLibrarySpectrum K0III
  K0_III

  # StellarLibrarySpectrum K0III_w
  K0_III_W

  # StellarLibrarySpectrum K0III_r
  K0_III_R

  # StellarLibrarySpectrum K0_1II
  K0_1_II

  # StellarLibrarySpectrum K4V
  K4_V

  # StellarLibrarySpectrum K4III
  K4_III

  # StellarLibrarySpectrum K4III_w
  K4_III_W

  # StellarLibrarySpectrum K4III_r
  K4_III_R

  # StellarLibrarySpectrum K4I
  K4_I

  # StellarLibrarySpectrum M0V
  M0_V

  # StellarLibrarySpectrum M0III
  M0_III

  # StellarLibrarySpectrum M3V
  M3_V

  # StellarLibrarySpectrum M3III
  M3_III

  # StellarLibrarySpectrum M6V
  M6_V

  # StellarLibrarySpectrum M6III
  M6_III

  # StellarLibrarySpectrum M9III
  M9_III
}

# Power law SED
type PowerLaw {
  index: BigDecimal!
}

type UniformSource {
  # Uniform source
  spectralDefinition: SpectralDefinitionSurface!
}

# Un-normalized spectral energy distribution
union UnnormalizedSed = StellarLibrary | CoolStarModel | Galaxy | Planet | Quasar | HiiRegion | PlanetaryNebula | PowerLaw | BlackBody | UserDefined

# User defined SED
type UserDefined {
  fluxDensities: [FluxDensityEntry!]!
}

# Radial velocity, choose one of the available units
input RadialVelocityInput {
  centimetersPerSecond: Long
  metersPerSecond: BigDecimal
  kilometersPerSecond: BigDecimal
}

type Wavelength {
  # Wavelength in pm
  picometers: Int!

  # Wavelength in Å
  angstroms: BigDecimal!

  # Wavelength in nm
  nanometers: BigDecimal!

  # Wavelength in µm
  micrometers: BigDecimal!
}

# Decimal value in Wavelength
input WavelengthDecimalInput {
  # decimal value in associated units
  value: BigDecimal!

  # units for associated value
  units: WavelengthUnits!
}

# Integral value in Wavelength
input WavelengthLongInput {
  # integral value in associated units
  value: Long!

  # units for associated value
  units: WavelengthUnits!
}

# Wavelength, choose one of the available units
input WavelengthModelInput {
  picometers: Long
  angstroms: BigDecimal
  nanometers: BigDecimal
  micrometers: BigDecimal
  fromLong: WavelengthLongInput
  fromDecimal: WavelengthDecimalInput
}

# Wavelength units
enum WavelengthUnits {
  # WavelengthUnits Picometers
  PICOMETERS

  # WavelengthUnits Angstroms
  ANGSTROMS

  # WavelengthUnits Nanometers
  NANOMETERS

  # WavelengthUnits Micrometers
  MICROMETERS
}

# GMOS North Disperser
enum GmosNorthDisperser {
  # GmosNorthDisperser B1200_G5301
  B1200_G5301

  # GmosNorthDisperser R831_G5302
  R831_G5302

  # GmosNorthDisperser B600_G5303
  B600_G5303

  # GmosNorthDisperser B600_G5307
  B600_G5307

  # GmosNorthDisperser R600_G5304
  R600_G5304

  # GmosNorthDisperser B480_G5309
  B480_G5309

  # GmosNorthDisperser R400_G5305
  R400_G5305

  # GmosNorthDisperser R150_G5306
  R150_G5306

  # GmosNorthDisperser R150_G5308
  R150_G5308
}
# GMOS North FPU
enum GmosNorthFpu {
  # GmosNorthFpu Ns0
  NS0

  # GmosNorthFpu Ns1
  NS1

  # GmosNorthFpu Ns2
  NS2

  # GmosNorthFpu Ns3
  NS3

  # GmosNorthFpu Ns4
  NS4

  # GmosNorthFpu Ns5
  NS5

  # GmosNorthFpu LongSlit_0_25
  LONG_SLIT_0_25

  # GmosNorthFpu LongSlit_0_50
  LONG_SLIT_0_50

  # GmosNorthFpu LongSlit_0_75
  LONG_SLIT_0_75

  # GmosNorthFpu LongSlit_1_00
  LONG_SLIT_1_00

  # GmosNorthFpu LongSlit_1_50
  LONG_SLIT_1_50

  # GmosNorthFpu LongSlit_2_00
  LONG_SLIT_2_00

  # GmosNorthFpu LongSlit_5_00
  LONG_SLIT_5_00

  # GmosNorthFpu Ifu2Slits
  IFU2_SLITS

  # GmosNorthFpu IfuBlue
  IFU_BLUE

  # GmosNorthFpu IfuRed
  IFU_RED
}

# GMOS North builtin-in FPU
type GmosNorthBuiltinFpu {
  # GMOS North builtin-fpu
  builtin: GmosNorthFpu!
}

# GMOS Custom Mask
type GmosCustomMask {
  # Custom Mask Filename
  filename: String!

  # Custom Slit Width
  slitWidth: GmosCustomSlitWidth!
}

# GMOS Custom Slit Width
enum GmosCustomSlitWidth {
  # GmosCustomSlitWidth CustomWidth_0_25
  CUSTOM_WIDTH_0_25

  # GmosCustomSlitWidth CustomWidth_0_50
  CUSTOM_WIDTH_0_50

  # GmosCustomSlitWidth CustomWidth_0_75
  CUSTOM_WIDTH_0_75

  # GmosCustomSlitWidth CustomWidth_1_00
  CUSTOM_WIDTH_1_00

  # GmosCustomSlitWidth CustomWidth_1_50
  CUSTOM_WIDTH_1_50

  # GmosCustomSlitWidth CustomWidth_2_00
  CUSTOM_WIDTH_2_00

  # GmosCustomSlitWidth CustomWidth_5_00
  CUSTOM_WIDTH_5_00
}

# Either custom mask or builtin-FPU
union GmosNorthFpuUnion = GmosCustomMask | GmosNorthBuiltinFpu

# GMOS North Filter
enum GmosNorthFilter {
  # GmosNorthFilter GPrime
  G_PRIME

  # GmosNorthFilter RPrime
  R_PRIME

  # GmosNorthFilter IPrime
  I_PRIME

  # GmosNorthFilter ZPrime
  Z_PRIME

  # GmosNorthFilter Z
  Z

  # GmosNorthFilter Y
  Y

  # GmosNorthFilter GG455
  GG455

  # GmosNorthFilter OG515
  OG515

  # GmosNorthFilter RG610
  RG610

  # GmosNorthFilter CaT
  CA_T

  # GmosNorthFilter Ha
  HA

  # GmosNorthFilter HaC
  HA_C

  # GmosNorthFilter DS920
  DS920

  # GmosNorthFilter SII
  SII

  # GmosNorthFilter OIII
  OIII

  # GmosNorthFilter OIIIC
  OIIIC

  # GmosNorthFilter HeII
  HE_II

  # GmosNorthFilter HeIIC
  HE_IIC

  # GmosNorthFilter HartmannA_RPrime
  HARTMANN_A_R_PRIME

  # GmosNorthFilter HartmannB_RPrime
  HARTMANN_B_R_PRIME

  # GmosNorthFilter GPrime_GG455
  G_PRIME_GG455

  # GmosNorthFilter GPrime_OG515
  G_PRIME_OG515

  # GmosNorthFilter RPrime_RG610
  R_PRIME_RG610

  # GmosNorthFilter IPrime_CaT
  I_PRIME_CA_T

  # GmosNorthFilter ZPrime_CaT
  Z_PRIME_CA_T

  # GmosNorthFilter UPrime
  U_PRIME
}

# GMOS South FPU
enum GmosSouthFpu {
  # GmosSouthFpu Bhros
  BHROS

  # GmosSouthFpu Ns1
  NS1

  # GmosSouthFpu Ns2
  NS2

  # GmosSouthFpu Ns3
  NS3

  # GmosSouthFpu Ns4
  NS4

  # GmosSouthFpu Ns5
  NS5

  # GmosSouthFpu LongSlit_0_25
  LONG_SLIT_0_25

  # GmosSouthFpu LongSlit_0_50
  LONG_SLIT_0_50

  # GmosSouthFpu LongSlit_0_75
  LONG_SLIT_0_75

  # GmosSouthFpu LongSlit_1_00
  LONG_SLIT_1_00

  # GmosSouthFpu LongSlit_1_50
  LONG_SLIT_1_50

  # GmosSouthFpu LongSlit_2_00
  LONG_SLIT_2_00

  # GmosSouthFpu LongSlit_5_00
  LONG_SLIT_5_00

  # GmosSouthFpu Ifu2Slits
  IFU2_SLITS

  # GmosSouthFpu IfuBlue
  IFU_BLUE

  # GmosSouthFpu IfuRed
  IFU_RED

  # GmosSouthFpu IfuNS2Slits
  IFU_NS2_SLITS

  # GmosSouthFpu IfuNSBlue
  IFU_NS_BLUE

  # GmosSouthFpu IfuNSRed
  IFU_NS_RED
}

# GMOS South Disperser
enum GmosSouthDisperser {
  # GmosSouthDisperser B1200_G5321
  B1200_G5321

  # GmosSouthDisperser R831_G5322
  R831_G5322

  # GmosSouthDisperser B600_G5323
  B600_G5323

  # GmosSouthDisperser R600_G5324
  R600_G5324

  # GmosSouthDisperser B480_G5327
  B480_G5327

  # GmosSouthDisperser R400_G5325
  R400_G5325

  # GmosSouthDisperser R150_G5326
  R150_G5326
}

# GMOS South Filter
enum GmosSouthFilter {
  # GmosSouthFilter UPrime
  U_PRIME

  # GmosSouthFilter GPrime
  G_PRIME

  # GmosSouthFilter RPrime
  R_PRIME

  # GmosSouthFilter IPrime
  I_PRIME

  # GmosSouthFilter ZPrime
  Z_PRIME

  # GmosSouthFilter Z
  Z

  # GmosSouthFilter Y
  Y

  # GmosSouthFilter GG455
  GG455

  # GmosSouthFilter OG515
  OG515

  # GmosSouthFilter RG610
  RG610

  # GmosSouthFilter RG780
  RG780

  # GmosSouthFilter CaT
  CA_T

  # GmosSouthFilter HartmannA_RPrime
  HARTMANN_A_R_PRIME

  # GmosSouthFilter HartmannB_RPrime
  HARTMANN_B_R_PRIME

  # GmosSouthFilter GPrime_GG455
  G_PRIME_GG455

  # GmosSouthFilter GPrime_OG515
  G_PRIME_OG515

  # GmosSouthFilter RPrime_RG610
  R_PRIME_RG610

  # GmosSouthFilter IPrime_RG780
  I_PRIME_RG780

  # GmosSouthFilter IPrime_CaT
  I_PRIME_CA_T

  # GmosSouthFilter ZPrime_CaT
  Z_PRIME_CA_T

  # GmosSouthFilter Ha
  HA

  # GmosSouthFilter SII
  SII

  # GmosSouthFilter HaC
  HA_C

  # GmosSouthFilter OIII
  OIII

  # GmosSouthFilter OIIIC
  OIIIC

  # GmosSouthFilter HeII
  HE_II

  # GmosSouthFilter HeIIC
  HE_IIC

  # GmosSouthFilter Lya395
  LYA395
}

# Image quality
enum ImageQuality {
  # ImageQuality PointOne
  POINT_ONE

  # ImageQuality PointTwo
  POINT_TWO

  # ImageQuality PointThree
  POINT_THREE

  # ImageQuality PointFour
  POINT_FOUR

  # ImageQuality PointSix
  POINT_SIX

  # ImageQuality PointEight
  POINT_EIGHT

  # ImageQuality OnePointZero
  ONE_POINT_ZERO

  # ImageQuality OnePointFive
  ONE_POINT_FIVE

  # ImageQuality TwoPointZero
  TWO_POINT_ZERO
}

# Cloud extinction
enum CloudExtinction {
  # CloudExtinction PointOne
  POINT_ONE

  # CloudExtinction PointThree
  POINT_THREE

  # CloudExtinction PointFive
  POINT_FIVE

  # CloudExtinction OnePointZero
  ONE_POINT_ZERO

  # CloudExtinction OnePointFive
  ONE_POINT_FIVE

  # CloudExtinction TwoPointZero
  TWO_POINT_ZERO

  # CloudExtinction ThreePointZero
  THREE_POINT_ZERO
}

enum SkyBackground {
  # SkyBackground Darkest
  DARKEST

  # SkyBackground Dark
  DARK

  # SkyBackground Gray
  GRAY

  # SkyBackground Bright
  BRIGHT
}

# Water vapor
enum WaterVapor {
  # WaterVapor VeryDry
  VERY_DRY

  # WaterVapor Dry
  DRY

  # WaterVapor Median
  MEDIAN

  # WaterVapor Wet
  WET
}

# Airmass range creation parameters
input AirmassRangeInput {
  min: BigDecimal!
  max: BigDecimal!
}

# Hour Angle creation parameters
input HourAngleRangeInput {
  minHours: BigDecimal!
  maxHours: BigDecimal!
}

# Elevation range creation parameters
input ElevationRangeInput {
  airmassRange: AirmassRangeInput
  hourAngleRange: HourAngleRangeInput
}

# Constraint set creation parameters
input ConstraintsSetInput {
  imageQuality: ImageQuality!
  cloudExtinction: CloudExtinction!
  skyBackground: SkyBackground!
  waterVapor: WaterVapor!
  elevationRange: ElevationRangeInput!
}

##############
# ITC schema
##############

# Gaussian source angle in appropriate units
input GaussianSourceAngleInput {
  microarcseconds: Long
  milliarcseconds: BigDecimal
  arcseconds: BigDecimal
}

# ITC error result
type ItcError implements ItcResult {
  # Message
  msg: String!

  # Result type
  resultType: String!
}

# Possible itc result
interface ItcResult {
  # Result type
  resultType: String!
}

type ItcSuccess implements ItcResult {
  # Exposure time duration
  exposureTime: Duration!

  # Exposures
  exposures: Int!

  # Signal/Noise ratio
  signalToNoise: PosBigDecimal!

  # Result type
  resultType: String!
}

type ObservingModeSpectroscopy {
  # Wavelength in appropriate units
  wavelength: Wavelength!

  # Resolution
  resolution: BigDecimal!

  # params
  params: InstrumentITCParams!

  # instrument
  instrument: InstrumentType
}

# An `Int` in the range from 1 to `Int.MaxValue`
scalar PosInt

# A `BigDecimal` above 0
scalar PosBigDecimal

type Query {
  basiccase(
    # Configuration alternatives search parameters.
    input: QueryConfigurationAlternativeSearchInput!
  ): SpectroscopyResult!

  spectroscopy(
    # Query multiple modes in spectroscopy mode
    input: SpectroscopyModeInput!
  ): [SpectroscopyResult!]!
}

type GmosSITCParams {
  # Gmos South disperser
  disperser: GmosSouthDisperser!

  # Gmos South Focal plane unit
  fpu: GmosSouthFpu

  # Gmos South filter
  filter: GmosSouthFilter
}

input GmosSITCInput {
  # Gmos South disperser
  disperser: GmosSouthDisperser!

  # Gmos South Focal plane unit
  fpu: GmosSouthFpu!

  # Gmos South filter
  filter: GmosSouthFilter
}

type GmosNITCParams {
  # Gmos North disperser
  disperser: GmosNorthDisperser!

  # Gmos North Focal plane unit
  customMask: GmosCustomMask

  fpu: GmosNorthFpu!

  # Gmos North filter
  filter: GmosNorthFilter
}

input GmosNITCInput {
  # Gmos North disperser
  disperser: GmosNorthDisperser!

  # Gmos North Focal plane unit
  fpu: GmosNorthFpu!

  # Gmos North filter
  filter: GmosNorthFilter
}

union InstrumentITCParams = GmosNITCParams | GmosSITCParams

# Params for instrument modes
input InstrumentModes {
  # Gmos North
  gmosN: GmosNITCInput

  # Gmos South
  gmosS: GmosSITCInput
}

# Configuration alternatives query
input SpectroscopyModeInput {
  # Observing wavelength.
  wavelength: WavelengthModelInput!

  # Minimum desired signal-to-noise ratio.
  signalToNoise: PosBigDecimal!

  # Spatial profile PointSource/UniformSource/GaussianSource.
  spatialProfile: SpatialProfileModelInput!

  # Spectral distribution variant BlacBode/PowerLaw/Stellar/NonStellar.
  spectralDistribution: SpectralDistributionInput!

  # Target magnitude/system/band.
  # magnitude: MagnitudeCreateInput!

  # Target radial velocity
  radialVelocity: RadialVelocityInput!

  # Conditions
  constraints: ConstraintsSetInput!

  # Instrument modes
  modes: [InstrumentModes]!
}

# Configuration alternatives query
input QueryConfigurationAlternativeSearchInput {
  # Observing wavelength.
  wavelength: WavelengthModelInput!

  # Minimum desired simultaneous wavelength coverage.
  simultaneousCoverage: WavelengthModelInput!

  # Minimum desired resolution.
  resolution: PosInt!

  # Minimum desired signal-to-noise ratio.
  signalToNoise: PosBigDecimal!

  # Spatial profile PointSource/UniformSource/GaussianSource.
  spatialProfile: SpatialProfileModelInput!

  # Spectral distribution variant BlacBode/PowerLaw/Stellar/NonStellar.
  spectralDistribution: SpectralDistributionInput!

  # Target magnitude/system/band.
  # magnitude: MagnitudeCreateInput!

  # Target radial velocity
  radialVelocity: RadialVelocityInput!
}

type Result {
  # Spectroscopy mode
  mode: ObservingModeSpectroscopy!

  # ITC results
  itc: ItcResult!
}

# Spatial profile PointSource/UniformSource/GaussianSource
input SpatialProfileModelInput {
  # Spatial profile type: Point/Uniform/Gaussian
  sourceType: SpatialProfileType!

  # Full width half maximum (including seeing) in suitable units. Required for the Gaussian spatial profile, ignored otherwise.
  fwhm: GaussianSourceAngleInput
}

# Spatial profile type: Point/Uniform/Gaussian
enum SpatialProfileType {
  # SpatialProfileType PointSource
  POINT_SOURCE

  # SpatialProfileType UniformSource
  UNIFORM_SOURCE

  # SpatialProfileType GaussianSource
  GAUSSIAN_SOURCE
}

# A black body with a temperature in Kelvin.
input BlackBody {
  temperature: BigDecimal
}

# Defined by power law function.
input PowerLaw {
  index: BigDecimal
}

# Library defined Stellar spectrum
enum StellarLibrarySpectrum {
  O5V
  O8III
  B0V
  B5_7V
  B5III
  B5I
  A0V
  A0III
  A0I
  A5V
  A5III
  F0V
  F0III
  F0I
  F5V
  F5V_W
  F6V_R
  F5III
  F5I
  G0V
  G0V_W
  G0V_R
  G0III
  G0I
  G2V
  G5V
  G5V_W
  G5V_R
  G5III
  G5III_W
  G5III_R
  G5I
  K0V
  K0V_R
  K0III
  K0III_W
  K0III_R
  K0_1II
  K4V
  K4III
  K4III_W
  K4III_R
  K4I
  M0V
  M0III
  M3V
  M3III
  M6V
  M6III
  M9III
}

# Library defined Non Stellar spectrum
enum NonStellarLibrarySpectrum {
  ELLIPTICAL_GALAXY
  SPIRAL_GALAXY
  QS0
  QS02
  ORION_NEBULA
  PLANETARY_NEBULA
  PLANETARY_NEBULA2
  PLANETARY_NEBULA3
  STARBURST_GALAXY
  PMS_STAR
  GALACTIC_CENTER
  AFGL_230
  AFGL_3068
  ALPHA_BOO
  ALPHA_CAR
  BETA_AND
  BETA_GRU
  GAMMA_CAS
  GAMMA_DRA
  L1511_IRS
  NGC1068
  NGC2023
  NGC2440
  O_CET
  ORION_BAR
  RSCL
  TXPSC
  WR104
  WR34
  MARS
  JUPITER
  SATURN
  URANUS
  NEPTUNE
}

# Spectral distribution variant
input SpectralDistributionInput {
  # SpectralDistribution BlackBody
  blackBody: BlackBody

  # SpectralDistribution PowerLaw
  powerLaw: PowerLaw

  # SpectralDistribution Stellar
  stellar: StellarLibrarySpectrum

  # SpectralDistribution NonStellar
  nonStellar: NonStellarLibrarySpectrum
}

type SpectroscopyResult {
  # Search results
  results: [Result!]!
}

# The `BigDecimal` scalar type represents signed fractional values with arbitrary precision.
scalar BigDecimal

# The `Long` scalar type represents non-fractional signed whole numeric values. Long can represent values between -(2^63) and 2^63 - 1.
scalar Long
